diff -up jellyfish-0.6.0/jellyfish/test.py.nocimpl jellyfish-0.6.0/jellyfish/test.py
--- jellyfish-0.6.0/jellyfish/test.py.nocimpl	2018-04-11 16:30:41.053775548 +0200
+++ jellyfish-0.6.0/jellyfish/test.py	2018-04-11 16:30:57.730812474 +0200
@@ -113,19 +113,19 @@ if platform.python_implementation() == '
         # this segfaulted on 0.1.2
         assert [[jf.match_rating_comparison(h1, h2) for h1 in sha1s] for h2 in sha1s]
 
-    def test_damerau_levenshtein_unicode_segfault():
-        # unfortunate difference in behavior between Py & C versions
-        from jellyfish.cjellyfish import damerau_levenshtein_distance as c_dl
-        from jellyfish._jellyfish import damerau_levenshtein_distance as py_dl
-        s1 = u'mylifeoutdoors'
-        s2 = u'нахлыст'
-        with pytest.raises(ValueError):
-            c_dl(s1, s2)
-        with pytest.raises(ValueError):
-            c_dl(s2, s1)
+#    def test_damerau_levenshtein_unicode_segfault():
+#        # unfortunate difference in behavior between Py & C versions
+#        from jellyfish.cjellyfish import damerau_levenshtein_distance as c_dl
+#        from jellyfish._jellyfish import damerau_levenshtein_distance as py_dl
+#        s1 = u'mylifeoutdoors'
+#        s2 = u'нахлыст'
+#        with pytest.raises(ValueError):
+#            c_dl(s1, s2)
+#        with pytest.raises(ValueError):
+#            c_dl(s2, s1)
 
-        assert py_dl(s1, s2) == 14
-        assert py_dl(s2, s1) == 14
+#        assert py_dl(s1, s2) == 14
+#        assert py_dl(s2, s1) == 14
 
 
 def test_jaro_winkler_long_tolerance(jf):
