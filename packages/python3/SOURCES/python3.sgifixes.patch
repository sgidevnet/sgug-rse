diff -u -r -N Python-3.8.1-orig/Lib/distutils/command/install.py Python-3.8.1/Lib/distutils/command/install.py
--- Python-3.8.1-orig/Lib/distutils/command/install.py	2019-12-18 17:21:23.000000000 +0000
+++ Python-3.8.1/Lib/distutils/command/install.py	2020-06-06 14:25:15.520864880 +0000
@@ -29,15 +29,15 @@
 
 INSTALL_SCHEMES = {
     'unix_prefix': {
-        'purelib': '$base/lib/python$py_version_short/site-packages',
-        'platlib': '$platbase/lib/python$py_version_short/site-packages',
+        'purelib': '$base/lib32/python$py_version_short/site-packages',
+        'platlib': '$platbase/lib32/python$py_version_short/site-packages',
         'headers': '$base/include/python$py_version_short$abiflags/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
         },
     'unix_home': {
-        'purelib': '$base/lib/python',
-        'platlib': '$base/lib/python',
+        'purelib': '$base/lib32/python',
+        'platlib': '$base/lib32/python',
         'headers': '$base/include/python/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
diff -u -r -N Python-3.8.1-orig/Lib/distutils/sysconfig.py Python-3.8.1/Lib/distutils/sysconfig.py
--- Python-3.8.1-orig/Lib/distutils/sysconfig.py	2019-12-18 17:21:23.000000000 +0000
+++ Python-3.8.1/Lib/distutils/sysconfig.py	2020-06-06 14:25:15.522819280 +0000
@@ -144,10 +144,9 @@
             prefix = plat_specific and BASE_EXEC_PREFIX or BASE_PREFIX
         else:
             prefix = plat_specific and EXEC_PREFIX or PREFIX
-
     if os.name == "posix":
         libpython = os.path.join(prefix,
-                                 "lib", "python" + get_python_version())
+                                 "lib32", "python" + get_python_version())
         if standard_lib:
             return libpython
         else:
diff -u -r -N Python-3.8.1-orig/Lib/site.py Python-3.8.1/Lib/site.py
--- Python-3.8.1-orig/Lib/site.py	2019-12-18 17:21:23.000000000 +0000
+++ Python-3.8.1/Lib/site.py	2020-06-06 14:25:15.524689440 +0000
@@ -269,6 +269,10 @@
     if os.name == 'nt':
         return f'{userbase}\\Python{version[0]}{version[1]}\\site-packages'
 
+    # sgug-rse specific hack.
+    if sys.platform.startswith('irix'):
+        return f'{userbase}/lib32/python/site-packages'
+
     if sys.platform == 'darwin' and sys._framework:
         return f'{userbase}/lib/python/site-packages'
 
@@ -335,11 +339,18 @@
         seen.add(prefix)
 
         if os.sep == '/':
-            sitepackages.append(os.path.join(prefix, "lib",
-                                        "python%d.%d" % sys.version_info[:2],
-                                        "site-packages"))
+            # sgug-rse specific hack.
+            if sys.platform.startswith('irix'):
+                sitepackages.append(os.path.join(prefix, "lib32",
+                                                 "python%d.%d" % sys.version_info[:2],
+                                                 "site-packages"))
+            else:
+                sitepackages.append(os.path.join(prefix, "lib",
+                                                 "python%d.%d" % sys.version_info[:2],
+                                                 "site-packages"))
         else:
             sitepackages.append(prefix)
+            sitepackages.append(os.path.join(prefix, "lib32", "site-packages"))
             sitepackages.append(os.path.join(prefix, "lib", "site-packages"))
     return sitepackages
 
diff -u -r -N Python-3.8.1-orig/Lib/sysconfig.py Python-3.8.1/Lib/sysconfig.py
--- Python-3.8.1-orig/Lib/sysconfig.py	2019-12-18 17:21:23.000000000 +0000
+++ Python-3.8.1/Lib/sysconfig.py	2020-06-06 14:25:15.510256320 +0000
@@ -20,10 +20,10 @@
 
 _INSTALL_SCHEMES = {
     'posix_prefix': {
-        'stdlib': '{installed_base}/lib/python{py_version_short}',
-        'platstdlib': '{platbase}/lib/python{py_version_short}',
-        'purelib': '{base}/lib/python{py_version_short}/site-packages',
-        'platlib': '{platbase}/lib/python{py_version_short}/site-packages',
+        'stdlib': '{installed_base}/lib32/python{py_version_short}',
+        'platstdlib': '{platbase}/lib32/python{py_version_short}',
+        'purelib': '{base}/lib32/python{py_version_short}/site-packages',
+        'platlib': '{platbase}/lib32/python{py_version_short}/site-packages',
         'include':
             '{installed_base}/include/python{py_version_short}{abiflags}',
         'platinclude':
@@ -32,10 +32,10 @@
         'data': '{base}',
         },
     'posix_home': {
-        'stdlib': '{installed_base}/lib/python',
-        'platstdlib': '{base}/lib/python',
-        'purelib': '{base}/lib/python',
-        'platlib': '{base}/lib/python',
+        'stdlib': '{installed_base}/lib32/python',
+        'platstdlib': '{base}/lib32/python',
+        'purelib': '{base}/lib32/python',
+        'platlib': '{base}/lib32/python',
         'include': '{installed_base}/include/python',
         'platinclude': '{installed_base}/include/python',
         'scripts': '{base}/bin',
@@ -62,10 +62,10 @@
         'data': '{userbase}',
         },
     'posix_user': {
-        'stdlib': '{userbase}/lib/python{py_version_short}',
-        'platstdlib': '{userbase}/lib/python{py_version_short}',
-        'purelib': '{userbase}/lib/python{py_version_short}/site-packages',
-        'platlib': '{userbase}/lib/python{py_version_short}/site-packages',
+        'stdlib': '{userbase}/lib32/python{py_version_short}',
+        'platstdlib': '{userbase}/lib32/python{py_version_short}',
+        'purelib': '{userbase}/lib32/python{py_version_short}/site-packages',
+        'platlib': '{userbase}/lib32/python{py_version_short}/site-packages',
         'include': '{userbase}/include/python{py_version_short}',
         'scripts': '{userbase}/bin',
         'data': '{userbase}',
diff -u -r -N Python-3.8.1-orig/Modules/addrinfo.h Python-3.8.1/Modules/addrinfo.h
--- Python-3.8.1-orig/Modules/addrinfo.h	2019-12-18 17:21:23.000000000 +0000
+++ Python-3.8.1/Modules/addrinfo.h	2020-06-06 14:25:15.404187600 +0000
@@ -123,7 +123,7 @@
 
 #endif /* !HAVE_GETNAMEINFO */
 
-#ifndef HAVE_ADDRINFO
+#if !defined(HAVE_ADDRINFO) && !defined(__sgi)
 struct addrinfo {
     int         ai_flags;       /* AI_PASSIVE, AI_CANONNAME */
     int         ai_family;      /* PF_xxx */
@@ -136,7 +136,7 @@
 };
 #endif /* !HAVE_ADDRINFO */
 
-#ifndef HAVE_SOCKADDR_STORAGE
+#if !defined(HAVE_SOCKADDR_STORAGE) && !defined(__sgi)
 /*
  * RFC 2553: protocol-independent placeholder for socket addresses
  */
diff -u -r -N Python-3.8.1-orig/Modules/getpath.c Python-3.8.1/Modules/getpath.c
--- Python-3.8.1-orig/Modules/getpath.c	2019-12-18 17:21:23.000000000 +0000
+++ Python-3.8.1/Modules/getpath.c	2020-06-06 14:25:15.496709600 +0000
@@ -1197,7 +1197,12 @@
     if (!calculate->exec_prefix) {
         return DECODE_LOCALE_ERR("EXEC_PREFIX define", len);
     }
+#ifdef __sgi
+    /* SGUG build specific hack */
+    calculate->lib_python = Py_DecodeLocale("lib32/python" VERSION, &len);
+#else
     calculate->lib_python = Py_DecodeLocale("lib/python" VERSION, &len);
+#endif
     if (!calculate->lib_python) {
         return DECODE_LOCALE_ERR("EXEC_PREFIX define", len);
     }
diff -u -r -N Python-3.8.1-orig/Modules/mmapmodule.c Python-3.8.1/Modules/mmapmodule.c
--- Python-3.8.1-orig/Modules/mmapmodule.c	2019-12-18 17:21:23.000000000 +0000
+++ Python-3.8.1/Modules/mmapmodule.c	2020-06-06 14:25:15.407329600 +0000
@@ -50,9 +50,12 @@
 
 #endif
 
-#ifdef UNIX
+#if defined(UNIX) || defined(__sgi)
+#undef _SGIAPI
+#define _SGIAPI 1
 #include <sys/mman.h>
 #include <sys/stat.h>
+#undef _SGIAPI
 
 #if defined(HAVE_SYSCONF) && defined(_SC_PAGESIZE)
 static int
diff -u -r -N Python-3.8.1-orig/Modules/posixmodule.c Python-3.8.1/Modules/posixmodule.c
--- Python-3.8.1-orig/Modules/posixmodule.c	2019-12-18 17:21:23.000000000 +0000
+++ Python-3.8.1/Modules/posixmodule.c	2020-06-06 14:25:15.423035040 +0000
@@ -35,6 +35,15 @@
 #  include <windows.h>
 #endif
 
+#ifdef __sgi
+extern int      initgroups(char *, int);
+extern int seteuid(uid_t);
+extern int setegid(gid_t);
+# ifndef NSIG
+#  define NSIG 65
+# endif
+#endif
+
 #include "pycore_ceval.h"     /* _PyEval_ReInitThreads() */
 #include "pycore_pystate.h"   /* _PyRuntime */
 #include "pythread.h"
diff -u -r -N Python-3.8.1-orig/Modules/selectmodule.c Python-3.8.1/Modules/selectmodule.c
--- Python-3.8.1-orig/Modules/selectmodule.c	2019-12-18 17:21:23.000000000 +0000
+++ Python-3.8.1/Modules/selectmodule.c	2020-06-06 14:25:15.430206480 +0000
@@ -45,6 +45,7 @@
 #ifdef __sgi
 /* This is missing from unistd.h */
 extern void bzero(void *, int);
+#include <sys/ioctl.h>
 #endif
 
 #ifdef HAVE_SYS_TYPES_H
diff -u -r -N Python-3.8.1-orig/Modules/socketmodule.c Python-3.8.1/Modules/socketmodule.c
--- Python-3.8.1-orig/Modules/socketmodule.c	2019-12-18 17:21:23.000000000 +0000
+++ Python-3.8.1/Modules/socketmodule.c	2020-06-06 14:25:15.440429760 +0000
@@ -244,7 +244,7 @@
 #endif
 
 
-#if defined(__sgi) && _COMPILER_VERSION>700 && !_SGIAPI
+#if defined(__sgi)
 /* make sure that the reentrant (gethostbyaddr_r etc)
    functions are declared correctly if compiling with
    MIPSPro 7.x in ANSI C mode (default) */
@@ -254,13 +254,33 @@
 #undef _SGIAPI /* to avoid warning */
 #define _SGIAPI 1
 
+#define __P(args)      args
+
+struct if_nameindex {
+        unsigned int     if_index;      /* 1, 2, ... */
+        char            *if_name;       /* null terminated name */
+};
+
+extern char    *if_indextoname __P((unsigned int, char *));
+extern unsigned int    if_nametoindex __P((const char *));
+extern struct if_nameindex     *if_nameindex __P((void));
+extern void    if_freenameindex __P((struct if_nameindex *));
+
+extern int sethostname(const char *, int);
+
+#define IFNAMSIZ        16
+#define IF_NAMESIZE     IFNAMSIZ
+
 #undef _XOPEN_SOURCE
+#include <unistd.h>
 #include <sys/socket.h>
 #include <sys/types.h>
 #include <netinet/in.h>
 #ifdef _SS_ALIGNSIZE
 #define HAVE_GETADDRINFO 1
 #define HAVE_GETNAMEINFO 1
+
+
 #endif
 
 #define HAVE_INET_PTON
@@ -3862,7 +3882,11 @@
     retval = Py_BuildValue("NOiN",
                            (*makeval)(ctx.result, makeval_data),
                            cmsg_list,
+#ifdef __sgi
+			   0,
+#else
                            (int)msg.msg_flags,
+#endif
                            makesockaddr(s->sock_fd, SAS2SA(&addrbuf),
                                         ((msg.msg_namelen > addrbuflen) ?
                                          addrbuflen : msg.msg_namelen),
diff -u -r -N Python-3.8.1-orig/Modules/socketmodule.h Python-3.8.1/Modules/socketmodule.h
--- Python-3.8.1-orig/Modules/socketmodule.h	2019-12-18 17:21:23.000000000 +0000
+++ Python-3.8.1/Modules/socketmodule.h	2020-06-06 14:25:15.442269600 +0000
@@ -9,6 +9,9 @@
 # endif
 # include <netinet/in.h>
 # if !defined(__CYGWIN__)
+#  if defined(__sgi)
+#   include <sys/bsd_types.h>
+#  endif
 #  include <netinet/tcp.h>
 # endif
 
diff -u -r -N Python-3.8.1-orig/Python/pylifecycle.c Python-3.8.1/Python/pylifecycle.c
--- Python-3.8.1-orig/Python/pylifecycle.c	2019-12-18 17:21:23.000000000 +0000
+++ Python-3.8.1/Python/pylifecycle.c	2020-06-06 14:25:15.445914800 +0000
@@ -46,6 +46,24 @@
 #define PyWindowsConsoleIO_Check(op) (PyObject_TypeCheck((op), &PyWindowsConsoleIO_Type))
 #endif
 
+#ifdef __sgi
+
+int
+setenv(const char *name, const char *value, int o)
+{
+    size_t len = strlen(name) + strlen(value) + 2;
+    char *s = malloc(len+1);
+    int ret;
+
+    snprintf(s, len, "%s=%s", name, value);
+    ret = putenv(s);
+    free(s);
+    return ret;
+}
+
+#define unsetenv(x) setenv(x, "", 1)
+#endif
+
 _Py_IDENTIFIER(flush);
 _Py_IDENTIFIER(name);
 _Py_IDENTIFIER(stdin);
diff -u -r -N Python-3.8.1-orig/Python/pytime.c Python-3.8.1/Python/pytime.c
--- Python-3.8.1-orig/Python/pytime.c	2019-12-18 17:21:23.000000000 +0000
+++ Python-3.8.1/Python/pytime.c	2020-06-06 14:25:15.448448080 +0000
@@ -882,6 +882,9 @@
 #ifdef CLOCK_HIGHRES
     const clockid_t clk_id = CLOCK_HIGHRES;
     const char *implementation = "clock_gettime(CLOCK_HIGHRES)";
+#elif defined(CLOCK_SGI_CYCLE)
+    const clockid_t clk_id = CLOCK_SGI_CYCLE;
+    const char *implementation = "clock_gettime(CLOCK_SGI_CYCLE)";
 #else
     const clockid_t clk_id = CLOCK_MONOTONIC;
     const char *implementation = "clock_gettime(CLOCK_MONOTONIC)";
diff -u -r -N Python-3.8.1-orig/aclocal.m4 Python-3.8.1/aclocal.m4
--- Python-3.8.1-orig/aclocal.m4	2019-12-18 17:21:23.000000000 +0000
+++ Python-3.8.1/aclocal.m4	2020-06-06 14:25:15.450332960 +0000
@@ -12,9 +12,9 @@
 # PARTICULAR PURPOSE.
 
 m4_ifndef([AC_CONFIG_MACRO_DIRS], [m4_defun([_AM_CONFIG_MACRO_DIRS], [])m4_defun([AC_CONFIG_MACRO_DIRS], [_AM_CONFIG_MACRO_DIRS($@)])])
-dnl pkg.m4 - Macros to locate and utilise pkg-config.   -*- Autoconf -*-
-dnl serial 11 (pkg-config-0.29.1)
-dnl
+# pkg.m4 - Macros to locate and utilise pkg-config.   -*- Autoconf -*-
+# serial 12 (pkg-config-0.29.2)
+
 dnl Copyright © 2004 Scott James Remnant <scott@netsplit.com>.
 dnl Copyright © 2012-2015 Dan Nicholson <dbn.lists@gmail.com>
 dnl
@@ -55,7 +55,7 @@
 dnl See the "Since" comment for each macro you use to see what version
 dnl of the macros you require.
 m4_defun([PKG_PREREQ],
-[m4_define([PKG_MACROS_VERSION], [0.29.1])
+[m4_define([PKG_MACROS_VERSION], [0.29.2])
 m4_if(m4_version_compare(PKG_MACROS_VERSION, [$1]), -1,
     [m4_fatal([pkg.m4 version $1 or higher is required but ]PKG_MACROS_VERSION[ found])])
 ])dnl PKG_PREREQ
@@ -156,7 +156,7 @@
 AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl
 
 pkg_failed=no
-AC_MSG_CHECKING([for $1])
+AC_MSG_CHECKING([for $2])
 
 _PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])
 _PKG_CONFIG([$1][_LIBS], [libs], [$2])
@@ -166,11 +166,11 @@
 See the pkg-config man page for more details.])
 
 if test $pkg_failed = yes; then
-   	AC_MSG_RESULT([no])
+        AC_MSG_RESULT([no])
         _PKG_SHORT_ERRORS_SUPPORTED
         if test $_pkg_short_errors_supported = yes; then
 	        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "$2" 2>&1`
-        else 
+        else
 	        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "$2" 2>&1`
         fi
 	# Put the nasty error message in config.log where it belongs
@@ -187,7 +187,7 @@
 _PKG_TEXT])[]dnl
         ])
 elif test $pkg_failed = untried; then
-     	AC_MSG_RESULT([no])
+        AC_MSG_RESULT([no])
 	m4_default([$4], [AC_MSG_FAILURE(
 [The pkg-config script could not be found or is too old.  Make sure it
 is in your PATH or set the PKG_CONFIG environment variable to the full
diff -u -r -N Python-3.8.1-orig/configure Python-3.8.1/configure
--- Python-3.8.1-orig/configure	2019-12-18 17:21:23.000000000 +0000
+++ Python-3.8.1/configure	2020-06-06 14:25:15.469484400 +0000
@@ -2992,6 +2992,12 @@
 $as_echo "#define _DARWIN_C_SOURCE 1" >>confdefs.h
 
 
+# The later defininition of _XOPEN_SOURCE and _POSIX_C_SOURCE disables
+# certain features on IRIX, so we need _SGI_SOURCE to re-enable
+# them.
+
+$as_echo "#define _SGI_SOURCE 1" >>confdefs.h
+
 
 define_xopen_source=yes
 
@@ -5877,6 +5883,16 @@
           LDLIBRARY='libpython$(LDVERSION).dll.a'
           DLLLIBRARY='libpython$(LDVERSION).dll'
           ;;
+    irix*|IRIX*)
+	  LDLIBRARY='libpython$(LDVERSION).so'
+	  BLDLIBRARY='-Wl,-rpath,$(LIBDIR) -L. -lpython$(LDVERSION)'
+	  RUNSHARED=LD_LIBRARYN32_PATH=`pwd`${LD_LIBRARYN32_PATH:+:${LD_LIBRARYN32_PATH}}
+	  INSTSONAME="$LDLIBRARY".$SOVERSION
+	  if test "$with_pydebug" != yes
+	  then
+	      PY3LIBRARY=libpython3.so
+	  fi
+	  ;;
     SunOS*)
 	  LDLIBRARY='libpython$(LDVERSION).so'
 	  BLDLIBRARY='-Wl,-R,$(LIBDIR) -L. -lpython$(LDVERSION)'
@@ -9330,6 +9346,10 @@
 		BLDSHARED="Modules/ld_so_aix \$(CC) -bI:Modules/python.exp"
 		LDSHARED="\$(LIBPL)/ld_so_aix \$(CC) -bI:\$(LIBPL)/python.exp"
 		;;
+	irix*|IRIX*)
+		LDSHARED='$(CC) -shared'
+		LDCXXSHARED='$(CXX) -shared'
+		;;
 	SunOS/5*)
 		if test "$GCC" = "yes" ; then
 			LDSHARED='$(CC) -shared'
diff -u -r -N Python-3.8.1-orig/configure.ac Python-3.8.1/configure.ac
--- Python-3.8.1-orig/configure.ac	2019-12-18 17:21:23.000000000 +0000
+++ Python-3.8.1/configure.ac	2020-06-06 14:25:15.477329680 +0000
@@ -140,6 +140,10 @@
 # them.
 AC_DEFINE(_DARWIN_C_SOURCE, 1, [Define on Darwin to activate all library features])
 
+# The later defininition of _XOPEN_SOURCE and _POSIX_C_SOURCE disables
+# certain features on IRIX, so we need _SGI_SOURCE to re-enable
+# them.
+AC_DEFINE(_SGI_SOURCE, 1, [Define on IRIX to activate all library features])
 
 define_xopen_source=yes
 
@@ -1109,6 +1113,16 @@
           LDLIBRARY='libpython$(LDVERSION).dll.a'
           DLLLIBRARY='libpython$(LDVERSION).dll'
           ;;
+    irix*|IRIX*)
+	  LDLIBRARY='libpython$(LDVERSION).so'
+	  BLDLIBRARY='-Wl,-rpath,$(LIBDIR) -L. -lpython$(LDVERSION)'
+	  RUNSHARED=LD_LIBRARYN32_PATH=`pwd`${LD_LIBRARYN32_PATH:+:${LD_LIBRARYN32_PATH}}
+	  INSTSONAME="$LDLIBRARY".$SOVERSION
+	  if test "$with_pydebug" != yes
+	  then
+	      PY3LIBRARY=libpython3.so
+	  fi
+	  ;;
     SunOS*)
 	  LDLIBRARY='libpython$(LDVERSION).so'
 	  BLDLIBRARY='-Wl,-R,$(LIBDIR) -L. -lpython$(LDVERSION)'
@@ -2516,6 +2530,10 @@
 		BLDSHARED="Modules/ld_so_aix \$(CC) -bI:Modules/python.exp"
 		LDSHARED="\$(LIBPL)/ld_so_aix \$(CC) -bI:\$(LIBPL)/python.exp"
 		;;
+	irix*|IRIX*)
+		LDSHARED='$(CC) -shared'
+		LDCXXSHARED='$(CXX) -shared'
+		;;
 	SunOS/5*)
 		if test "$GCC" = "yes" ; then
 			LDSHARED='$(CC) -shared'
diff -u -r -N Python-3.8.1-orig/pyconfig.h.in Python-3.8.1/pyconfig.h.in
--- Python-3.8.1-orig/pyconfig.h.in	2019-12-18 17:21:23.000000000 +0000
+++ Python-3.8.1/pyconfig.h.in	2020-06-06 14:25:15.480187920 +0000
@@ -1603,6 +1603,9 @@
 /* Define to force use of thread-safe errno, h_errno, and other functions */
 #undef _REENTRANT
 
+/* Define on IRIX to activate all library features */
+#undef _SGI_SOURCE
+
 /* Define to the level of X/Open that your system supports */
 #undef _XOPEN_SOURCE
 
diff -u -r -N Python-3.8.1-orig/setup.py Python-3.8.1/setup.py
--- Python-3.8.1-orig/setup.py	2019-12-18 17:21:23.000000000 +0000
+++ Python-3.8.1/setup.py	2020-06-06 14:25:15.484404080 +0000
@@ -670,8 +670,8 @@
             add_dir_to_list(self.compiler.include_dirs,
                             sysconfig.get_config_var("INCLUDEDIR"))
 
-        system_lib_dirs = ['/lib64', '/usr/lib64', '/lib', '/usr/lib']
-        system_include_dirs = ['/usr/include']
+        system_lib_dirs = ['/usr/sgug/lib32', '/usr/lib32', '/lib32', '/usr/lib']
+        system_include_dirs = ['/usr/sgug/include', '/usr/include']
         # lib_dirs and inc_dirs are used to search for files;
         # if a file is found in one of those directories, it can
         # be assumed that no additional -I,-L directives are needed.
@@ -2202,9 +2202,12 @@
             sep = ' ' + sep
             return [v.strip() for v in value.split(sep) if v.strip()]
 
-        openssl_includes = split_var('OPENSSL_INCLUDES', '-I')
-        openssl_libdirs = split_var('OPENSSL_LDFLAGS', '-L')
+        #openssl_includes = split_var('OPENSSL_INCLUDES', '-I')
+        #openssl_libdirs = split_var('OPENSSL_LDFLAGS', '-L')
+        openssl_includes = ('/usr/sgug/include',)
+        openssl_libdirs = ('/usr/sgug/lib32',)
         openssl_libs = split_var('OPENSSL_LIBS', '-l')
+        
         if not openssl_libs:
             # libssl and libcrypto not found
             self.missing.extend(['_ssl', '_hashlib'])
@@ -2214,6 +2217,7 @@
         ssl_incs = find_file(
             'openssl/ssl.h', self.inc_dirs, openssl_includes
         )
+
         if ssl_incs is None:
             self.missing.extend(['_ssl', '_hashlib'])
             return None, None
