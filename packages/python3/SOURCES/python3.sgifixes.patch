diff -u -r -N Python-3.7.7-orig/Include/object.h Python-3.7.7/Include/object.h
--- Python-3.7.7-orig/Include/object.h	2020-06-20 13:13:32.262104800 +0000
+++ Python-3.7.7/Include/object.h	2020-06-20 13:22:03.875754360 +0000
@@ -1124,7 +1124,7 @@
    ? (void)(0)                                      \
    : _PyObject_AssertFailed((obj),                  \
                             (msg),                  \
-                            (__STRING(expr)),       \
+                            (Py_STRINGIFY(expr)),   \
                             (__FILE__),             \
                             (__LINE__),             \
                             (__PRETTY_FUNCTION__)))
diff -u -r -N Python-3.7.7-orig/Lib/distutils/command/install.py Python-3.7.7/Lib/distutils/command/install.py
--- Python-3.7.7-orig/Lib/distutils/command/install.py	2020-06-20 13:13:32.421714880 +0000
+++ Python-3.7.7/Lib/distutils/command/install.py	2020-06-20 13:22:03.878103400 +0000
@@ -29,15 +29,15 @@
 
 INSTALL_SCHEMES = {
     'unix_prefix': {
-        'purelib': '$base/lib/python$py_version_short/site-packages',
-        'platlib': '$platbase/lib/python$py_version_short/site-packages',
+        'purelib': '$base/lib32/python$py_version_short/site-packages',
+        'platlib': '$platbase/lib32/python$py_version_short/site-packages',
         'headers': '$base/include/python$py_version_short$abiflags/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
         },
     'unix_home': {
-        'purelib': '$base/lib/python',
-        'platlib': '$base/lib/python',
+        'purelib': '$base/lib32/python',
+        'platlib': '$base/lib32/python',
         'headers': '$base/include/python/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
diff -u -r -N Python-3.7.7-orig/Lib/distutils/sysconfig.py Python-3.7.7/Lib/distutils/sysconfig.py
--- Python-3.7.7-orig/Lib/distutils/sysconfig.py	2020-06-20 13:13:32.282756960 +0000
+++ Python-3.7.7/Lib/distutils/sysconfig.py	2020-06-20 13:22:03.879926440 +0000
@@ -148,7 +148,7 @@
 
     if os.name == "posix":
         libpython = os.path.join(prefix,
-                                 "lib", "python" + get_python_version())
+                                 "lib32", "python" + get_python_version())
         if standard_lib:
             return libpython
         else:
diff -u -r -N Python-3.7.7-orig/Lib/distutils/tests/test_install.py Python-3.7.7/Lib/distutils/tests/test_install.py
--- Python-3.7.7-orig/Lib/distutils/tests/test_install.py	2020-03-10 06:11:12.000000000 +0000
+++ Python-3.7.7/Lib/distutils/tests/test_install.py	2020-06-20 13:22:03.881483000 +0000
@@ -57,8 +57,9 @@
             self.assertEqual(got, expected)
 
         libdir = os.path.join(destination, "lib", "python")
+        platlibdir = os.path.join(destination, "lib32", "python")
         check_path(cmd.install_lib, libdir)
-        check_path(cmd.install_platlib, libdir)
+        check_path(cmd.install_platlib, platlibdir)
         check_path(cmd.install_purelib, libdir)
         check_path(cmd.install_headers,
                    os.path.join(destination, "include", "python", "foopkg"))
diff -u -r -N Python-3.7.7-orig/Lib/site.py Python-3.7.7/Lib/site.py
--- Python-3.7.7-orig/Lib/site.py	2020-06-20 13:13:32.429267600 +0000
+++ Python-3.7.7/Lib/site.py	2020-06-20 13:22:03.883692440 +0000
@@ -268,6 +268,9 @@
     if os.name == 'nt':
         return f'{userbase}\\Python{version[0]}{version[1]}\\site-packages'
 
+    if sys.platform.startswith('irix'):
+        return f'{userbase}/lib32/python/site-packages'
+
     if sys.platform == 'darwin' and sys._framework:
         return f'{userbase}/lib/python/site-packages'
 
@@ -334,11 +337,15 @@
         seen.add(prefix)
 
         if os.sep == '/':
+            sitepackages.append(os.path.join(prefix, "lib32",
+                                        "python" + sys.version[:3],
+                                        "site-packages"))
             sitepackages.append(os.path.join(prefix, "lib",
                                         "python%d.%d" % sys.version_info[:2],
                                         "site-packages"))
         else:
             sitepackages.append(prefix)
+            sitepackages.append(os.path.join(prefix, "lib32", "site-packages"))
             sitepackages.append(os.path.join(prefix, "lib", "site-packages"))
     return sitepackages
 
diff -u -r -N Python-3.7.7-orig/Lib/sysconfig.py Python-3.7.7/Lib/sysconfig.py
--- Python-3.7.7-orig/Lib/sysconfig.py	2020-06-20 13:13:32.285263280 +0000
+++ Python-3.7.7/Lib/sysconfig.py	2020-06-20 13:22:03.885866760 +0000
@@ -20,10 +20,10 @@
 
 _INSTALL_SCHEMES = {
     'posix_prefix': {
-        'stdlib': '{installed_base}/lib/python{py_version_short}',
-        'platstdlib': '{platbase}/lib/python{py_version_short}',
-        'purelib': '{base}/lib/python{py_version_short}/site-packages',
-        'platlib': '{platbase}/lib/python{py_version_short}/site-packages',
+        'stdlib': '{installed_base}/lib32/python{py_version_short}',
+        'platstdlib': '{platbase}/lib32/python{py_version_short}',
+        'purelib': '{base}/lib32/python{py_version_short}/site-packages',
+        'platlib': '{platbase}/lib32/python{py_version_short}/site-packages',
         'include':
             '{installed_base}/include/python{py_version_short}{abiflags}',
         'platinclude':
@@ -32,10 +32,10 @@
         'data': '{base}',
         },
     'posix_home': {
-        'stdlib': '{installed_base}/lib/python',
-        'platstdlib': '{base}/lib/python',
-        'purelib': '{base}/lib/python',
-        'platlib': '{base}/lib/python',
+        'stdlib': '{installed_base}/lib32/python',
+        'platstdlib': '{base}/lib32/python',
+        'purelib': '{base}/lib32/python',
+        'platlib': '{base}/lib32/python',
         'include': '{installed_base}/include/python',
         'platinclude': '{installed_base}/include/python',
         'scripts': '{base}/bin',
@@ -62,10 +62,10 @@
         'data': '{userbase}',
         },
     'posix_user': {
-        'stdlib': '{userbase}/lib/python{py_version_short}',
-        'platstdlib': '{userbase}/lib/python{py_version_short}',
-        'purelib': '{userbase}/lib/python{py_version_short}/site-packages',
-        'platlib': '{userbase}/lib/python{py_version_short}/site-packages',
+        'stdlib': '{userbase}/lib32/python{py_version_short}',
+        'platstdlib': '{userbase}/lib32/python{py_version_short}',
+        'purelib': '{userbase}/lib32/python{py_version_short}/site-packages',
+        'platlib': '{userbase}/lib32/python{py_version_short}/site-packages',
         'include': '{userbase}/include/python{py_version_short}',
         'scripts': '{userbase}/bin',
         'data': '{userbase}',
diff -u -r -N Python-3.7.7-orig/Lib/test/test_fileio.py Python-3.7.7/Lib/test/test_fileio.py
--- Python-3.7.7-orig/Lib/test/test_fileio.py	2020-03-10 06:11:12.000000000 +0000
+++ Python-3.7.7/Lib/test/test_fileio.py	2020-06-20 13:22:03.887847560 +0000
@@ -384,7 +384,7 @@
                     self.assertEqual(f.writable(), True)
                     if sys.platform != "darwin" and \
                        'bsd' not in sys.platform and \
-                       not sys.platform.startswith(('sunos', 'aix')):
+                       not sys.platform.startswith(('sunos', 'aix', 'irix')):
                         # Somehow /dev/tty appears seekable on some BSDs
                         self.assertEqual(f.seekable(), False)
                     self.assertEqual(f.isatty(), True)
diff -u -r -N Python-3.7.7-orig/Lib/test/test_io.py Python-3.7.7/Lib/test/test_io.py
--- Python-3.7.7-orig/Lib/test/test_io.py	2020-03-10 06:11:12.000000000 +0000
+++ Python-3.7.7/Lib/test/test_io.py	2020-06-20 13:22:03.894649960 +0000
@@ -4145,6 +4145,7 @@
     def alarm_interrupt(self, sig, frame):
         1/0
 
+    @unittest.skipIf(sys.platform.startswith('irix'), 'issue #12429: IRIX affeected')
     def check_interrupted_write(self, item, bytes, **fdopen_kwargs):
         """Check that a partial write, when it gets interrupted, properly
         invokes the signal handler, and bubbles up the exception raised
diff -u -r -N Python-3.7.7-orig/Lib/test/test_site.py Python-3.7.7/Lib/test/test_site.py
--- Python-3.7.7-orig/Lib/test/test_site.py	2020-03-10 06:11:12.000000000 +0000
+++ Python-3.7.7/Lib/test/test_site.py	2020-06-20 13:22:03.897004200 +0000
@@ -269,8 +269,8 @@
         dirs = site.getsitepackages()
         if os.sep == '/':
             # OS X, Linux, FreeBSD, etc
-            self.assertEqual(len(dirs), 1)
-            wanted = os.path.join('xoxo', 'lib',
+            self.assertEqual(len(dirs), 2)
+            wanted = os.path.join('xoxo', 'lib32',
                                   'python%d.%d' % sys.version_info[:2],
                                   'site-packages')
             self.assertEqual(dirs[0], wanted)
diff -u -r -N Python-3.7.7-orig/Makefile.pre.in Python-3.7.7/Makefile.pre.in
--- Python-3.7.7-orig/Makefile.pre.in	2020-06-20 13:13:32.241860480 +0000
+++ Python-3.7.7/Makefile.pre.in	2020-06-20 13:22:03.900431960 +0000
@@ -144,7 +144,7 @@
 MANDIR=		@mandir@
 INCLUDEDIR=	@includedir@
 CONFINCLUDEDIR=	$(exec_prefix)/include
-SCRIPTDIR=	$(prefix)/lib
+SCRIPTDIR=	$(prefix)/lib32
 ABIFLAGS=	@ABIFLAGS@
 
 # Detailed destination directories
diff -u -r -N Python-3.7.7-orig/Modules/_multiprocessing/semaphore.c Python-3.7.7/Modules/_multiprocessing/semaphore.c
--- Python-3.7.7-orig/Modules/_multiprocessing/semaphore.c	2020-03-10 06:11:12.000000000 +0000
+++ Python-3.7.7/Modules/_multiprocessing/semaphore.c	2020-06-20 13:22:03.902403320 +0000
@@ -185,10 +185,31 @@
 
 #define SEM_CLEAR_ERROR()
 #define SEM_GET_LAST_ERROR() 0
-#define SEM_CREATE(name, val, max) sem_open(name, O_CREAT | O_EXCL, 0600, val)
 #define SEM_CLOSE(sem) sem_close(sem)
 #define SEM_GETVALUE(sem, pval) sem_getvalue(sem, pval)
-#define SEM_UNLINK(name) sem_unlink(name)
+#if defined(__sgi)
+#define MAXPATHLEN 1024
+static inline sem_t *adapt_sem_open(const char * name, int oflag,
+			    mode_t mode, unsigned int val)
+{
+  char tmpbuf[MAXPATHLEN];
+  sprintf(tmpbuf, "/tmp%s", name);
+  return sem_open((const char*)tmpbuf, O_CREAT | O_EXCL, 0600, val);
+}
+
+static inline int adapt_sem_unlink(const char * name )
+{
+    char tmpbuf[MAXPATHLEN];
+    sprintf(tmpbuf, "/tmp%s", name);
+    return sem_unlink((const char *)tmpbuf);
+}
+
+# define SEM_CREATE(name, val, max) adapt_sem_open(name, O_CREAT | O_EXCL, 0600, val)
+# define SEM_UNLINK(name) adapt_sem_unlink(name)
+#else
+# define SEM_CREATE(name, val, max) sem_open(name, O_CREAT | O_EXCL, 0600, val)
+# define SEM_UNLINK(name) sem_unlink(name)
+#endif
 
 /* OS X 10.4 defines SEM_FAILED as -1 instead of (sem_t *)-1;  this gives
    compiler warnings, and (potentially) undefined behaviour. */
@@ -500,7 +521,13 @@
 
 #ifndef MS_WINDOWS
     if (name != NULL) {
+#if defined(__sgi)
+      char tmpbuf[MAXPATHLEN];
+      sprintf(tmpbuf, "/tmp%s", name);
+      handle = sem_open(tmpbuf, 0);
+#else
         handle = sem_open(name, 0);
+#endif
         if (handle == SEM_FAILED) {
             PyMem_Free(name_copy);
             return PyErr_SetFromErrno(PyExc_OSError);
diff -u -r -N Python-3.7.7-orig/Modules/addrinfo.h Python-3.7.7/Modules/addrinfo.h
--- Python-3.7.7-orig/Modules/addrinfo.h	2020-03-10 06:11:12.000000000 +0000
+++ Python-3.7.7/Modules/addrinfo.h	2020-06-20 13:22:03.903961240 +0000
@@ -123,7 +123,7 @@
 
 #endif /* !HAVE_GETNAMEINFO */
 
-#ifndef HAVE_ADDRINFO
+#if !defined(HAVE_ADDRINFO) && !defined(__sgi)
 struct addrinfo {
     int         ai_flags;       /* AI_PASSIVE, AI_CANONNAME */
     int         ai_family;      /* PF_xxx */
@@ -136,7 +136,7 @@
 };
 #endif /* !HAVE_ADDRINFO */
 
-#ifndef HAVE_SOCKADDR_STORAGE
+#if !defined(HAVE_SOCKADDR_STORAGE) && !defined(__sgi)
 /*
  * RFC 2553: protocol-independent placeholder for socket addresses
  */
diff -u -r -N Python-3.7.7-orig/Modules/getpath.c Python-3.7.7/Modules/getpath.c
--- Python-3.7.7-orig/Modules/getpath.c	2020-03-10 06:11:12.000000000 +0000
+++ Python-3.7.7/Modules/getpath.c	2020-06-20 13:22:03.906368840 +0000
@@ -535,7 +535,7 @@
                 "Could not find platform dependent libraries <exec_prefix>\n");
         }
         wcsncpy(exec_prefix, calculate->exec_prefix, MAXPATHLEN);
-        joinpath(exec_prefix, L"lib/lib-dynload");
+        joinpath(exec_prefix, L"lib32/lib-dynload");
     }
     /* If we found EXEC_PREFIX do *not* reduce it!  (Yet.) */
 }
@@ -787,7 +787,7 @@
     else {
         wcsncpy(calculate->zip_path, calculate->prefix, MAXPATHLEN);
     }
-    joinpath(calculate->zip_path, L"lib/python00.zip");
+    joinpath(calculate->zip_path, L"lib32/python00.zip");
 
     /* Replace "00" with version */
     size_t bufsz = wcslen(calculate->zip_path);
@@ -912,7 +912,7 @@
     if (!calculate->exec_prefix) {
         return DECODE_LOCALE_ERR("EXEC_PREFIX define", len);
     }
-    calculate->lib_python = Py_DecodeLocale("lib/python" VERSION, &len);
+    calculate->lib_python = Py_DecodeLocale("lib32/python" VERSION, &len);
     if (!calculate->lib_python) {
         return DECODE_LOCALE_ERR("EXEC_PREFIX define", len);
     }
diff -u -r -N Python-3.7.7-orig/Modules/posixmodule.c Python-3.7.7/Modules/posixmodule.c
--- Python-3.7.7-orig/Modules/posixmodule.c	2020-03-10 06:11:12.000000000 +0000
+++ Python-3.7.7/Modules/posixmodule.c	2020-06-20 13:22:03.920931640 +0000
@@ -33,6 +33,15 @@
 #include "winreparse.h"
 #endif
 
+#ifdef __sgi
+extern int      initgroups(char *, int);
+extern int seteuid(uid_t);
+extern int setegid(gid_t);
+# ifndef NSIG
+#  define NSIG 65
+# endif
+#endif
+
 /* On android API level 21, 'AT_EACCESS' is not declared although
  * HAVE_FACCESSAT is defined. */
 #ifdef __ANDROID__
@@ -11416,6 +11425,8 @@
     }
 #elif defined(__hpux)
     ncpu = mpctl(MPC_GETNUMSPUS, NULL, NULL);
+#elif defined(__sgi)
+    ncpu = sysconf(_SC_NPROC_ONLN);
 #elif defined(HAVE_SYSCONF) && defined(_SC_NPROCESSORS_ONLN)
     ncpu = sysconf(_SC_NPROCESSORS_ONLN);
 #elif defined(__DragonFly__) || \
diff -u -r -N Python-3.7.7-orig/Modules/selectmodule.c Python-3.7.7/Modules/selectmodule.c
--- Python-3.7.7-orig/Modules/selectmodule.c	2020-03-10 06:11:12.000000000 +0000
+++ Python-3.7.7/Modules/selectmodule.c	2020-06-20 13:22:03.925211000 +0000
@@ -45,6 +45,7 @@
 #ifdef __sgi
 /* This is missing from unistd.h */
 extern void bzero(void *, int);
+#include <sys/ioctl.h>
 #endif
 
 #ifdef HAVE_SYS_TYPES_H
diff -u -r -N Python-3.7.7-orig/Modules/socketmodule.c Python-3.7.7/Modules/socketmodule.c
--- Python-3.7.7-orig/Modules/socketmodule.c	2020-03-10 06:11:12.000000000 +0000
+++ Python-3.7.7/Modules/socketmodule.c	2020-06-20 13:22:03.934435640 +0000
@@ -241,7 +241,7 @@
 #endif
 
 
-#if defined(__sgi) && _COMPILER_VERSION>700 && !_SGIAPI
+#if defined(__sgi)
 /* make sure that the reentrant (gethostbyaddr_r etc)
    functions are declared correctly if compiling with
    MIPSPro 7.x in ANSI C mode (default) */
@@ -251,7 +251,25 @@
 #undef _SGIAPI /* to avoid warning */
 #define _SGIAPI 1
 
+#define __P(args) args
+
+struct if_nameindex {
+  unsigned int if_index;
+  char * if_name;
+};
+
+extern char * if_indextoname __P((unsigned int, char *));
+extern unsigned int if_nametoindex __P((const char*));
+extern struct if_nameindex * if_nameindex __P((void));
+extern void if_freenameindex __P((struct if_nameindex *));
+
+extern int sethostname(const char*, int);
+
+#define IFNAMSIZ 16
+#define IF_NAMESIZE IFNAMSIZ
+
 #undef _XOPEN_SOURCE
+#include <unistd.h>
 #include <sys/socket.h>
 #include <sys/types.h>
 #include <netinet/in.h>
@@ -3716,7 +3734,11 @@
     retval = Py_BuildValue("NOiN",
                            (*makeval)(ctx.result, makeval_data),
                            cmsg_list,
+#if defined(__sgi)
+			   0,
+#else
                            (int)msg.msg_flags,
+#endif
                            makesockaddr(s->sock_fd, SAS2SA(&addrbuf),
                                         ((msg.msg_namelen > addrbuflen) ?
                                          addrbuflen : msg.msg_namelen),
diff -u -r -N Python-3.7.7-orig/Modules/socketmodule.h Python-3.7.7/Modules/socketmodule.h
--- Python-3.7.7-orig/Modules/socketmodule.h	2020-03-10 06:11:12.000000000 +0000
+++ Python-3.7.7/Modules/socketmodule.h	2020-06-20 13:22:03.936278920 +0000
@@ -9,6 +9,9 @@
 # endif
 # include <netinet/in.h>
 # if !defined(__CYGWIN__)
+#  if defined(__sgi)
+#   include <sys/bsd_types.h>
+#  endif
 #  include <netinet/tcp.h>
 # endif
 
diff -u -r -N Python-3.7.7-orig/Python/pylifecycle.c Python-3.7.7/Python/pylifecycle.c
--- Python-3.7.7-orig/Python/pylifecycle.c	2020-03-10 06:11:12.000000000 +0000
+++ Python-3.7.7/Python/pylifecycle.c	2020-06-20 13:22:03.939822440 +0000
@@ -39,6 +39,24 @@
 #define PyWindowsConsoleIO_Check(op) (PyObject_TypeCheck((op), &PyWindowsConsoleIO_Type))
 #endif
 
+#ifdef __sgi
+
+int
+setenv(const char *name, const char *value, int o)
+{
+    size_t len = strlen(name) + strlen(value) + 2;
+    char *s = malloc(len+1);
+    int ret;
+
+    snprintf(s, len, "%s=%s", name, value);
+    ret = putenv(s);
+    free(s);
+    return ret;
+}
+
+#define unsetenv(x) setenv(x, "", 1)
+#endif
+
 _Py_IDENTIFIER(flush);
 _Py_IDENTIFIER(name);
 _Py_IDENTIFIER(stdin);
diff -u -r -N Python-3.7.7-orig/Python/pytime.c Python-3.7.7/Python/pytime.c
--- Python-3.7.7-orig/Python/pytime.c	2020-03-10 06:11:12.000000000 +0000
+++ Python-3.7.7/Python/pytime.c	2020-06-20 13:22:03.942032360 +0000
@@ -882,6 +882,9 @@
 #ifdef CLOCK_HIGHRES
     const clockid_t clk_id = CLOCK_HIGHRES;
     const char *implementation = "clock_gettime(CLOCK_HIGHRES)";
+#elif defined(__sgi)
+    const clockid_t clk_id = CLOCK_SGI_CYCLE;
+    const char *implementation = "clock_gettime(CLOCK_SGI_CYCLE)";
 #else
     const clockid_t clk_id = CLOCK_MONOTONIC;
     const char *implementation = "clock_gettime(CLOCK_MONOTONIC)";
diff -u -r -N Python-3.7.7-orig/configure.ac Python-3.7.7/configure.ac
--- Python-3.7.7-orig/configure.ac	2020-06-20 13:13:32.770572640 +0000
+++ Python-3.7.7/configure.ac	2020-06-20 13:22:25.749717400 +0000
@@ -140,6 +140,11 @@
 # them.
 AC_DEFINE(_DARWIN_C_SOURCE, 1, [Define on Darwin to activate all library features])
 
+# The later defininition of _XOPEN_SOURCE and _POSIX_C_SOURCE disables
+# certain features on IRIX, so we need _SGI_SOURCE to re-enable
+# them.
+AC_DEFINE(_SGI_SOURCE, 1, [Define on IRIX to activate all library features])
+
 
 define_xopen_source=yes
 
@@ -1131,6 +1136,16 @@
           LDLIBRARY='libpython$(LDVERSION).dll.a'
           DLLLIBRARY='libpython$(LDVERSION).dll'
           ;;
+    irix*|IRIX*)
+	  LDLIBRARY='libpython$(LDVERSION).so'
+	  BLDLIBRARY='-Wl,-R,$(LIBDIR) -L. -lpython$(LDVERSION)'
+	  RUNSHARED=LD_LIBRARYN32_PATH=`pwd`${LD_LIBRARYN32_PATH:+:${LD_LIBRARYN32_PATH}}
+	  INSTSONAME="$LDLIBRARY".$SOVERSION
+	  if test "$with_pydebug" != yes
+	  then
+	      PY3LIBRARY=libpython3.so
+	  fi
+          ;;
     SunOS*)
 	  LDLIBRARY='libpython$(LDVERSION).so'
 	  BLDLIBRARY='-Wl,-R,$(LIBDIR) -L. -lpython$(LDVERSION)'
@@ -2536,6 +2551,10 @@
 		BLDSHARED="Modules/ld_so_aix \$(CC) -bI:Modules/python.exp"
 		LDSHARED="\$(LIBPL)/ld_so_aix \$(CC) -bI:\$(LIBPL)/python.exp"
 		;;
+        irix*|IRIX*)
+		LDSHARED='$(CC) -shared'
+		LDCXXSHARED='$(CXX) -shared'
+		;;
 	SunOS/5*)
 		if test "$GCC" = "yes" ; then
 			LDSHARED='$(CC) -shared'
@@ -4594,7 +4613,7 @@
 #include <sys/stat.h>
 
 int main(void) {
-  sem_t *a = sem_open("/autoconf", O_CREAT, S_IRUSR|S_IWUSR, 0);
+  sem_t *a = sem_open("/tmp/autoconf", O_CREAT, S_IRUSR|S_IWUSR, 0);
   if (a == SEM_FAILED) {
     perror("sem_open");
     return 1;
@@ -4626,7 +4645,7 @@
 #include <sys/stat.h>
 
 int main(void){
-  sem_t *a = sem_open("/autocftw", O_CREAT, S_IRUSR|S_IWUSR, 0);
+  sem_t *a = sem_open("/tmp/autocftw", O_CREAT, S_IRUSR|S_IWUSR, 0);
   int count;
   int res;
   if(a==SEM_FAILED){
@@ -4757,9 +4776,10 @@
 SOABI='cpython-'`echo $VERSION | tr -d .`${ABIFLAGS}${PLATFORM_TRIPLET:+-$PLATFORM_TRIPLET}
 AC_MSG_RESULT($SOABI)
 
+echo "Checking $ac_sys_system to set EXT_SUFFIX"
 AC_SUBST(EXT_SUFFIX)
 case $ac_sys_system in
-    Linux*|GNU*|Darwin)
+    Linux*|GNU*|Darwin|irix*|IRIX*)
 	EXT_SUFFIX=.${SOABI}${SHLIB_SUFFIX};;
     *)
 	EXT_SUFFIX=${SHLIB_SUFFIX};;
@@ -4772,9 +4792,9 @@
 dnl define LIBPL after ABIFLAGS and LDVERSION is defined.
 AC_SUBST(PY_ENABLE_SHARED)
 if test x$PLATFORM_TRIPLET = x; then
-  LIBPL='$(prefix)'"/lib/python${VERSION}/config-${LDVERSION}"
+  LIBPL='$(prefix)'"/lib32/python${VERSION}/config-${LDVERSION}"
 else
-  LIBPL='$(prefix)'"/lib/python${VERSION}/config-${LDVERSION}-${PLATFORM_TRIPLET}"
+  LIBPL='$(prefix)'"/lib32/python${VERSION}/config-${LDVERSION}-${PLATFORM_TRIPLET}"
 fi
 AC_SUBST(LIBPL)
 
diff -u -r -N Python-3.7.7-orig/setup.py Python-3.7.7/setup.py
--- Python-3.7.7-orig/setup.py	2020-03-10 06:11:12.000000000 +0000
+++ Python-3.7.7/setup.py	2020-06-20 13:22:03.953764200 +0000
@@ -581,12 +581,12 @@
             os.unlink(tmpfile)
 
     def detect_modules(self):
-        # Ensure that /usr/local is always used, but the local build
+        # Ensure that /usr/sgug is always used, but the local build
         # directories (i.e. '.' and 'Include') must be first.  See issue
         # 10520.
         if not cross_compiling:
-            add_dir_to_list(self.compiler.library_dirs, '/usr/local/lib')
-            add_dir_to_list(self.compiler.include_dirs, '/usr/local/include')
+            add_dir_to_list(self.compiler.library_dirs, '/usr/sgug/lib32')
+            add_dir_to_list(self.compiler.include_dirs, '/usr/sgug/include')
         # only change this for cross builds for 3.3, issues on Mageia
         if cross_compiling:
             self.add_gcc_paths()
@@ -638,8 +638,8 @@
             add_dir_to_list(self.compiler.include_dirs,
                             sysconfig.get_config_var("INCLUDEDIR"))
 
-        system_lib_dirs = ['/lib64', '/usr/lib64', '/lib', '/usr/lib']
-        system_include_dirs = ['/usr/include']
+        system_lib_dirs = ['/usr/sgug/lib32','/usr/lib32','/lib32','/usr/lib']
+        system_include_dirs = ['/usr/sgug/include','/usr/include']
         # lib_dirs and inc_dirs are used to search for files;
         # if a file is found in one of those directories, it can
         # be assumed that no additional -I,-L directives are needed.
@@ -891,11 +891,11 @@
             elif curses_library:
                 readline_libs.append(curses_library)
             elif self.compiler.find_library_file(lib_dirs +
-                                                     ['/usr/lib/termcap'],
+                                                     ['/usr/sgug/lib32/termcap'],
                                                      'termcap'):
                 readline_libs.append('termcap')
             exts.append( Extension('readline', ['readline.c'],
-                                   library_dirs=['/usr/lib/termcap'],
+                                   library_dirs=['/usr/sgug/lib32/termcap'],
                                    extra_link_args=readline_extra_link_args,
                                    libraries=readline_libs) )
         else:
@@ -1669,7 +1669,7 @@
             missing.append('_tkinter')
 
         # Build the _uuid module if possible
-        uuid_incs = find_file("uuid.h", inc_dirs, ["/usr/include/uuid"])
+        uuid_incs = find_file("uuid.h", inc_dirs, ["/usr/sgug/include/uuid"])
         if uuid_incs is not None:
             if self.compiler.find_library_file(lib_dirs, 'uuid'):
                 uuid_libs = ['uuid']
