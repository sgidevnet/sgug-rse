From 36dcccb94bef72a7c4cf6acf7479f18568e545bb Mon Sep 17 00:00:00 2001
From: Kamil Dudka <kdudka@redhat.com>
Date: Tue, 2 May 2017 17:19:20 +0200
Subject: [PATCH] module: drop link-time vs. run-time TLS backend check

This effectively reverts the following commit:
8891398a31119ce7c872509ed60328926c51cdfb

Bug: https://bugzilla.redhat.com/1446850
---
 src/module.c | 24 +-----------------------
 1 file changed, 1 insertion(+), 23 deletions(-)

diff --git a/src/module.c b/src/module.c
index a7108a0..af79875 100644
--- a/src/module.c
+++ b/src/module.c
@@ -322,7 +322,7 @@ initpycurl(void)
 {
     PyObject *m, *d;
     const curl_version_info_data *vi;
-    const char *libcurl_version, *runtime_ssl_lib;
+    const char *libcurl_version;
     size_t libcurl_version_len, pycurl_version_len;
     PyObject *xio_module = NULL;
     PyObject *collections_module = NULL;
@@ -345,28 +345,6 @@ initpycurl(void)
         goto error;
     }
 
-    /* Our compiled crypto locks should correspond to runtime ssl library. */
-    if (vi->ssl_version == NULL) {
-        runtime_ssl_lib = "none/other";
-    } else if (!strncmp(vi->ssl_version, "OpenSSL/", 8) || !strncmp(vi->ssl_version, "LibreSSL/", 9) ||
-               !strncmp(vi->ssl_version, "BoringSSL", 9)) {
-        runtime_ssl_lib = "openssl";
-    } else if (!strncmp(vi->ssl_version, "wolfSSL/", 8)) {
-        runtime_ssl_lib = "wolfssl";
-    } else if (!strncmp(vi->ssl_version, "GnuTLS/", 7)) {
-        runtime_ssl_lib = "gnutls";
-    } else if (!strncmp(vi->ssl_version, "NSS/", 4)) {
-        runtime_ssl_lib = "nss";
-    } else if (!strncmp(vi->ssl_version, "mbedTLS/", 8)) {
-        runtime_ssl_lib = "mbedtls";
-    } else {
-        runtime_ssl_lib = "none/other";
-    }
-    if (strcmp(runtime_ssl_lib, COMPILE_SSL_LIB)) {
-        PyErr_Format(PyExc_ImportError, "pycurl: libcurl link-time ssl backend (%s) is different from compile-time ssl backend (%s)", runtime_ssl_lib, COMPILE_SSL_LIB);
-        goto error;
-    }
-
     /* Initialize the type of the new type objects here; doing it here
      * is required for portability to Windows without requiring C++. */
     p_Curl_Type = &Curl_Type;
-- 
2.10.2

