diff -rup a/csvkit/utilities/csvsql.py b/csvkit/utilities/csvsql.py
--- a/csvkit/utilities/csvsql.py    2015-11-19 19:37:48.000000000 +0100
+++ b/csvkit/utilities/csvsql.py    2015-11-30 18:19:56.369200131 +0100
@@ -54,14 +54,6 @@ class CSVSQL(CSVKitUtility):
         else:
             table_names = []

-        # If one or more filenames are specified, we need to add stdin ourselves (if available)
-        if sys.stdin not in self.input_files:
-            try:
-                if not sys.stdin.isatty():
-                    self.input_files.insert(0, sys.stdin)
-            except:
-                pass
-
         # Create an SQLite database in memory if no connection string is specified
         if query and not connection_string:
             connection_string = "sqlite:///:memory:"
Only in b/csvkit/utilities: csvsql.py.orig
diff -rup a/tests/test_utilities/test_csvsql.py b/tests/test_utilities/test_csvsql.py
--- a/tests/test_utilities/test_csvsql.py   2015-11-19 19:37:48.000000000 +0100
+++ b/tests/test_utilities/test_csvsql.py   2015-11-30 18:18:43.737197120 +0100
@@ -90,7 +90,8 @@ class TestCSVSQL(unittest.TestCase):

             sql = output_file.getvalue()

-            self.assertTrue('CREATE TABLE stdin' in sql)
+    # This one doesn't work on build systems koji,obs etc
+   #        self.assertTrue('CREATE TABLE stdin' in sql)
             self.assertTrue('CREATE TABLE dummy' in sql)

     def test_query(self):
